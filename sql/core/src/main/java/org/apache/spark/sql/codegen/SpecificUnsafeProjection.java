package org.apache.spark.sql.codegen;

// The code generated by UnsafeProjection.create in FileSourceScanExec.doExecute
// with schema: StructType(StructField(i_item_sk,IntegerType,true), StructField(i_item_desc,StringType,true), StructField(i_brand_id,IntegerType,true), StructField(i_class,StringType,true))

// public java.lang.Object generate(Object[] references) {
//     return new SpecificUnsafeProjection(references);
// }

import org.apache.spark.sql.catalyst.InternalRow;
import org.apache.spark.sql.catalyst.expressions.UnsafeRow;
import org.apache.spark.unsafe.types.UTF8String;

class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {

    private Object[] references;
    private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];

    public SpecificUnsafeProjection(Object[] references) {
        this.references = references;
        mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(4, 64);

    }

    public void initialize(int partitionIndex) {

    }

    // Scala.Function1 need this
    // public java.lang.Object apply(java.lang.Object row) {
    //     return apply((InternalRow) row);
    // }

    public UnsafeRow apply(InternalRow i) {
        mutableStateArray_0[0].reset();


        mutableStateArray_0[0].zeroOutNullBytes();

        boolean isNull_0 = i.isNullAt(0);
        int value_0 = isNull_0 ?
            -1 : (i.getInt(0));
        if (isNull_0) {
            mutableStateArray_0[0].setNullAt(0);
        } else {
            mutableStateArray_0[0].write(0, value_0);
        }

        boolean isNull_1 = i.isNullAt(1);
        UTF8String value_1 = isNull_1 ?
            null : (i.getUTF8String(1));
        if (isNull_1) {
            mutableStateArray_0[0].setNullAt(1);
        } else {
            mutableStateArray_0[0].write(1, value_1);
        }

        boolean isNull_2 = i.isNullAt(2);
        int value_2 = isNull_2 ?
            -1 : (i.getInt(2));
        if (isNull_2) {
            mutableStateArray_0[0].setNullAt(2);
        } else {
            mutableStateArray_0[0].write(2, value_2);
        }

        boolean isNull_3 = i.isNullAt(3);
        UTF8String value_3 = isNull_3 ?
            null : (i.getUTF8String(3));
        if (isNull_3) {
            mutableStateArray_0[0].setNullAt(3);
        } else {
            mutableStateArray_0[0].write(3, value_3);
        }
        return (mutableStateArray_0[0].getRow());
    }


}
